{"timestamp": 1745246253.759579, "stored_source_code": "# Calcular score das avalia\u00e7\u00f5es\nimport numpy as np\nimport pandas as pd\n# declare a list tasks whose products you want to use as inputs\nupstream = None\nproduct = None\ndf_input_path = '../../dados/X_trainToronto.csv'\ndf_review_input_path = '../../dados_produzidos/reviewsTrainTorontoSentiment.csv'\ndf_reg = pd.read_csv(df_input_path)\ndf_reviews = pd.read_csv(df_review_input_path)\ndf_reg = df_reg[['business_id', 'review_count']]\ndf_reg\n## Calcular score das analises\nfrom sklearn.preprocessing import StandardScaler\n\ndef make_df_score(df, df_reviews):\n    weights = {\n        'useful': 1,\n        'cool': 0.75,\n        'funny': 0.5\n    }\n    df_reviews['weight'] = df_reviews.apply(lambda row: 1 + row['useful'] * weights['useful'] + row['cool'] * weights['cool'] + row['funny'] * weights['funny'], axis=1)\n    def wavg_label(group):\n        d = group['label']\n        w = group['weight']\n        return (d * w).sum() / w.sum()\n    \n    def wavg_score(group):\n        d = group['score']\n        w = group['weight']\n        return (d * w).sum() / w.sum()\n        \n    df_reviews_label_grouped = df_reviews.groupby(['business_id']).apply(wavg_label, include_groups=False)\n    df_reviews_score_grouped = df_reviews.groupby(['business_id']).apply(wavg_score, include_groups=False)\n    df_reviews_scores = pd.DataFrame(df_reviews_label_grouped, columns=['stars']).join(pd.DataFrame(df_reviews_score_grouped, columns=['score']))\n    df_score = df.join(df_reviews_scores)\n    scaler = StandardScaler()\n    df_score['stars'] = scaler.fit_transform(df_score[['stars']])\n    return df_score\n\ndf_score = make_df_score(df_reg.set_index('business_id'), df_reviews)\ndf_reg[['stars', 'score']] = df_score.reset_index()[['stars', 'score']]\ndf_reg[['stars', 'score']]\ndf_reg.to_parquet(product['data'])", "params": {"df_input_path": "../../dados/X_trainToronto.csv", "df_review_input_path": "../../dados_produzidos/reviewsTrainTorontoSentiment.csv"}}